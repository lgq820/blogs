(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{454:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1、git-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、git-config"}},[t._v("#")]),t._v(" 1、git config")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# 检查一下用户名和邮箱是否配置\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list\n\n# 设置全局用户 \ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your name'")]),t._v(" \ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxxx@example.com'")]),t._v("\n\n# 设置局部用户（在指定项目目录下，可配置不同项目有不同的git用户）\ngit config user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ccc'")]),t._v(" \ngit config user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxxx@example.com'")]),t._v(" \n\n# 设置全局的一次性修改配置 \ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("edit\n\n# 查看全局配置 \ncat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gitconfig\n\n")])])]),s("h3",{attrs:{id:"_2、git-生成密钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、git-生成密钥"}},[t._v("#")]),t._v(" 2、git 生成密钥")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  ssh"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keygen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t rsa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxxxx@example.com'")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3、git-remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、git-remote"}},[t._v("#")]),t._v(" 3、git remote")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# 初始化仓库\ngit init\n\n# 查看已关联的仓库 \ngit remote "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v\n\n# 关联远程仓库 \ngit remote add origin https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n\n# 删除远程仓库 \ngit remote remove origin\n\n# 直接修改远程仓库 \ngit remote set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("url origin https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n\n# 查看远程仓库的详细信息 \ngit remote show \ngit remote show origin\n\n")])])]),s("h3",{attrs:{id:"_4、git-clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、git-clone"}},[t._v("#")]),t._v(" 4、git clone")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  # git clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库地址"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  git clone http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n\n  # git clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库地址"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地目录名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n  git clone http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_5、git-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、git-branch"}},[t._v("#")]),t._v(" 5、git branch")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  # 查看本地仓库所有分支\n  git branch\n  # 查看远程仓库所有分支\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r\n  # 查看本地和远程仓库的所有分支\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n\n  # 基于当前分支，新建一个分支\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  # 删除分支：被删除分支 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("是"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 基于当前分支新建出来的，可用"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d 或 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v("\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  # 删除分支：被删除分支 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("不是"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 基于当前分支新建出来的，只能使用 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v("\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  # 删除远程分支\n  git push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  # 重命名当前分支\n  git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_6、git-checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、git-checkout"}},[t._v("#")]),t._v(" 6、git checkout")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  # 切换到本地分支 \n  git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n  # 切换到指定某次提交的commit_id \n  git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n  # 从现有分支中新建新的分支，并切换到新分支 \n  git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n  # 从远程分支中新建新的分支，并切换到新分支 \n  git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n  # 放弃工作区的修改，只影响工作区 \n  git checkout "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n  # 放弃工作区和暂存区的修改，影响工作区和暂存区 \n  git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f\n\n")])])]),s("h3",{attrs:{id:"_7、-git-status-查看工作区和暂存区的状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、-git-status-查看工作区和暂存区的状态"}},[t._v("#")]),t._v(" 7、 git status 查看工作区和暂存区的状态")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  git status\n")])])]),s("h3",{attrs:{id:"_8、git-add-将工作区的修改添加到暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、git-add-将工作区的修改添加到暂存区"}},[t._v("#")]),t._v(" 8、git add 将工作区的修改添加到暂存区")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  # 将工作区的所有修改提交到暂存区 \n  git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n  # 将指定目录添加到暂存区，包括子目录所有修改\n  git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  # 将src目录下的所有js文件添加到暂存区\n  git add src"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n\n")])])]),s("h3",{attrs:{id:"_9、git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、git-commit"}},[t._v("#")]),t._v(" 9、git commit")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m 与 git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("am 的区别\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 是将暂存区的修改，提交到本地仓库\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("am"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 将暂存区的修改提交到本地仓库之前，多了一步操作：先把本地的变动提交到暂存区，所以它是将暂存区和工作区的修改，提交到本地仓库。\n\n注意：\n这里需要注意一点，工作区提交到暂存区的变动文件，是已经与远程版本库有了关联的（即之前已经提交到远程的），该命令对新增的文件，是不起作用的，所以提交新增的文件，需要执行git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  指令。\n\n# 将暂存区的修改，提交到本地仓库 \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交信息'")]),t._v("\n\n# 将暂存区和工作区的修改，提交到本地仓库 \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("am "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交信息'")]),t._v("\n\n# 避开钩子函数的检查，强制提交 \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交信息'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("verify \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交信息'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n\n\n# 将暂存区的修改，加到上一次的commit中，进入commit编辑，输入"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("wq 退出 \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("amend\n\n# 修改上一次提交的commit信息（未push到远程仓库） \ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("amend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("only "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'新的提交信息'")]),t._v("\n\n\n")])])]),s("h3",{attrs:{id:"_10、git-pull-push-拉取-提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、git-pull-push-拉取-提交"}},[t._v("#")]),t._v(" 10、git pull/push 拉取/提交")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# 拉取代码，将远程仓库分支同步到本地 \ngit pull\n\n# 将本地仓库的分支推送到远程分支（建立在本地分支追踪远程分支基础上） \ngit push\n\n# 推送到远程分支，并设置本地分支跟踪的远程分支 \ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("upstream origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_11、git-merge-分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、git-merge-分支合并"}},[t._v("#")]),t._v(" 11、git merge 分支合并")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# 把本地仓库的某分支合并到当前分支 \ngit merge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n# 取消合并 \ngit merge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("abort\n\n")])])]),s("h3",{attrs:{id:"_12、git-stash-本地存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、git-stash-本地存储"}},[t._v("#")]),t._v(" 12、git stash 本地存储")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#将工作区的改动（未commit），临时存储在本地\n# 默认按stash的顺序命名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \ngit stash \n\n#添加备注 \ngit stash save "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v(" \n\n# 查看存储列表 \ngit stash list \n\n# 应用最近一次的stash \ngit stash apply \n\n# 应用指定的那一条 \ngit stash apply stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n# 应用最近一次的stash，随后删除该记录 \ngit stash pop \n\n# 删除stash的所有记录 \ngit stash clear\n\n")])])]),s("h3",{attrs:{id:"_13、git-log-日志过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13、git-log-日志过滤"}},[t._v("#")]),t._v(" 13、git log 日志过滤")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#主要用于查看Git版本演变历史（也就是提交历史），同时根据追加的参数和选项不同，过滤出想要的结果\n\n按数量过滤： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 显示前 n 条记录 \n    shortlog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n：按作者分类，过滤出前 n 条 \n按时间过滤： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("after"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 如 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("after"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-08-30'")]),t._v("，显示 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" 之后的提交记录（包含"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("当天） \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("before"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 如："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("before"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-08-30'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 显示 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" 之前的提交记录（不包含"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("当天）\n    before"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("after 是个相对时间，可以这么写："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("after"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a week ago'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("after"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yesterday'")]),t._v(" \n按作者过滤： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 作者名不需要精确匹配，只需要包含就行了，可使用正则匹配 \n按commit信息过滤： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("grep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'关键字'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("过滤出记录中")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commit提交时的注释"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("与关键字有关的记录 \n过滤merge commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("merges"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 过滤出不包含 merge 的记录 \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("—merges")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 只过滤出包含 merge 的记录 \n\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p：按补丁显示每个更新文件的差异，比下一条 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("stat命令信息更全 \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("stat：统计出每次更新的修改文件列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 及改动文件中 添加"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("删除"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("变动 的行数 \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("：使用其他格式显示统计信息，参数有点复杂，目前很少用到\n\n\n#常用指令\ngit log\n\n# 查看所有的提交记录\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("all\n\n# 将记录一行一行的形式展示：简洁明\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("oneline\n\n# 记录以图形化的形式展示\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("graph\n\n# 显示每次更新的文件修改统计信息，会列出具体文件列表\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("stat\n\n# 展示前"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("条\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" \n# 按作者分类，过滤出前"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("条\ngit shrtlog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" \n# 过滤出 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),t._v(" 的前"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("条记录，不包括 merge的记录\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'XXX'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("merges \n# 过滤出 commit 提交的注释中  包含"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),t._v("关键字的前"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("条记录，不包括merge 的记录\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("grep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("merges\n\n\n")])])]),s("h3",{attrs:{id:"_14、git-revert-代码撤销"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14、git-revert-代码撤销"}},[t._v("#")]),t._v(" 14、git revert 代码撤销")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#撤销指定的提交，并产生一个新的commit，但保留了原来的commit记录\n\n# 撤销指定的提交版本 \ngit revert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n# 撤销的版本范围 \ngit revert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n# 撤销上一次提交 \ngit revet "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n\n# 撤销上上次提交 \ngit revet "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_15、git-reset-代码回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15、git-reset-代码回滚"}},[t._v("#")]),t._v(" 15、git reset 代码回滚")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#让代码回滚到指定的提交版本，并且不保留原来的commit记录\n\n# 仅是撤销commit记录，所有改动都保留（工作区和暂存区） \n# "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 代表上个版本 \ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("soft "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" \ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("soft commit_id\n\n# 撤销commit记录，不保留改动，直接回退到指定的提交版本 \ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" \ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard commit_id\n\n# 强推到远程 \ngit push origin dev "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("force\n\n")])])]),s("h3",{attrs:{id:"_16、git-tag-版本号管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16、git-tag-版本号管理"}},[t._v("#")]),t._v(" 16、git tag 版本号管理")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n# 列出所有标签 \ngit tag\n\n# 默认在 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" 上创建一个标签 \ngit tag v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\n# 指定一个 commit id 创建一个标签 \ngit tag v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n# 创建带有说明的标签，用 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a 指定标签名，"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m 指定说明文字 \ngit tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"说明文字"')]),t._v("\n\n# 查看单个标签具体信息 \ngit show "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n# 推送指定的本地标签到远程仓库 \ngit push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n# 推送本地未推送的所有标签到远程仓库 \ngit push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("tags\n\n# 删除本地标签 \ngit tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\n# 删除一个远程标签 \ngit push origin tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("# 同步：拉取远程版本库的更新，同步到本地 \ngit fetch \ngit fetch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);